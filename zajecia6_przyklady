import numpy as np

# inicjalizacja tablicy
a = np.array([[0, 1], [2, 3]])
print(a)
# lub drugi sposób
a = np.arange(2, 5, 0.1)
print(a)
# wypisanie typu zmiennej tablicy (nie jej elementów) - nda
print(type(a))
# sprawdzenie typu danych tablicy
print(a.dtype)
# inicjalizacja tablicy z konkretnym typem danych
a = np.arange(2, dtype='int64')
print(a.dtype)
# zapisywanie kopii tablicy jako tablicy z innym typem
b = a.astype('float')
print(b)
print(b.dtype)
# wypisywanie rozmiaru tablicy
print(b.shape)
# można też sprawdzić ilość wymiarów tablicy
print(a.ndim)
# stworzenie tablicy wielowymiraowej może wyglądać tak
# parametrem przekazywanym do funkcji array jest obiekt

zera = np.zeros((5, 5))
jedynki = np.ones((4, 4))
print(zera)
print(jedynki)
# warto sprawdzić jaki jest domyślny typ danych takich tablic
print(zera.dtype)
print(jedynki.dtype)
# można również stworzyć 'pustą' macierz o podanych wymiarach
# wartości umieszczone są losowe, najpierw podawana jest i
pusta = np.empty((2, 2))
print(pusta)
# do elementów tablicy można odwołać się tak jak do elementów

macierz = np.array([[12, 11], [2, 1]])
print(macierz)

poz_1 = macierz[1, 1]
poz_2 = macierz[0][1]
print(poz_1)
print(poz_2)

liczby = np.arange(1, 2, 0.1)
print(liczby)
liczby_lin = np.linspace(1, 2, 5, endpoint=False)
print(liczby_lin)
z = np.indices((5, 3))
print(z)
print(z[0][1][2])

mat_dieg = np.diag([a for a in range(5)])
print(mat_dieg)

mat_diag_k = np.diag([a for a in range(5)], 1)
print(mat_diag_k)

z = np.fromiter(range(5), dtype='int32')
print(z)

import numpy as np

# znaki = b'ogolna'
# z1 = np.frombuffer(znaki, dtype='S1')
# print(z1)
# z2 = np.frombuffer(znaki, dtype='S2')
# print(z2)

# znaki = 'ogolna'
# z3 = np.array(list(znaki))
# z4 = np.array(list(znaki), dtype='S1')
# z5 = np.array(list(b'ogolna'))
# z6 = np.fromiter(list(znaki), dtype='S2')
# print(z3)
# print(z4)
# print(z5)
# print(z6)

# a = np.arange(10)
# print(a)
# s = slice(2, 7, 2)
# print(a[s])
# s = range(2, 7, 2)
# print(a[s])
#
# print(a[2:7:2])
#
#
# print(a[2:5])

mat = np.arange(25)
mat = mat.reshape((5, 5))
print(mat)
print(' ')
print(mat[1:])  # od drugiego wiersza
print(' ')
print(mat[:, 1:2])  # druga kolumna jako wektor
print(' ')
print(mat[:, 4:5])  # ostatnia kolumna
print(' ')
print(mat[2:5, 1:3])  # 2 i 3 kolmna dla 3,4,5 wierzy
print(' ')
print(mat[:, range(2, 6, 2)])  # 3 i 5 kolumna

print(' ')
print(' ')

x = np.array([[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11]])
print(x)
print(' ')
rows = np.array([[0, 0], [3, 3]])
cols = np.array([[0, 2], [0, 2]])
y = x[rows, cols]
print(y)  # x1[0,0] x2[0,2] x3[3,0] x4[3,2] 'rogi' macierzy x

