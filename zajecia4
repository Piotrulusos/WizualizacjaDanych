# zad1

A = [1 - x for x in range(1, 11)]
B = [4 ** i for i in range(0, 8)]
C = [x for x in B if x % 2 == 0]

print(A)
print(B)
print(C)

# zad2

import random

listy1 = [random.randint(0, 100) for _ in range(10)]
print("lista 1:", listy1)

listy2 = [x for x in listy1 if x % 2 == 0]
print("lista 2 (parzyste):", listy2)

# zad3

produkty = {
    "jabłka": "kg",
    "banany": "szt",
    "chleb": "szt",
    "ser": "dag",
    "jajka": "szt",
    "mleko": "l",
    "woda": "l"
}

produkty_sztuki = [produkt for produkt, jednostka in produkty.items() if jednostka == "szt"]
print("produkty_sztuki:", produkty_sztuki)

# zad4

def czy_trojkat_prostokatny(a, b, c):
    # posortuj boki trójkąta od najkrótszego do najdłuższego
    boki = sorted([a, b, c])

    # sprawdź, czy trójkąt jest prostokątny
    if boki[0]**2 + boki[1]**2 == boki[2]**2:
        return True
    else:
        return False

print(czy_trojkat_prostokatny(3, 4, 5))

# zad5

def pole_trapezu(a=0, b=0, h=0):
    if a <= 0 or b <= 0 or h <= 0:
        print("Błędne dane wejściowe!")
        return None

    pole = (a + b) * h / 2

    return pole

print(pole_trapezu(1,2,3))

# zad6

def iloczyn_ciagu(a1=1, b=4, ile=10):
    ciag = [a1 + i * b for i in range(ile)]
    iloczyn = 1
    for x in ciag:
        iloczyn *= x
    return iloczyn

print(iloczyn_ciagu())

# zad7
def iloczyn_ciagu7(*liczby):
    # jeżeli nie ma argumentów to
    if len(liczby) == 0:
        return 0
    else:
        suma = 1
        for i in liczby:
            suma *= i
    return suma

print(iloczyn_ciagu7(1,3,2))

# zad8

def zlicz_zakupy(**produkty):
    ilosc = sum(produkty.values())
    cena = sum([v for v in produkty.values()])
    return ilosc, cena

produkty = {"jajka": 10, "chleb": 3, "mleko": 5}
ilosc, cena = zlicz_zakupy(**produkty)
print(f"Liczba produktów: {ilosc}")
print(f"Całkowita wartość zakupów: {cena} zł")

# zad9

from math import sqrt

try:
    liczba = float(input("Podaj liczbę: "))
    if liczba < 0:
        raise ValueError("Liczba musi być dodatnia")
    pierwiastek = sqrt(liczba)
    print(f"Pierwiastek z {liczba} wynosi: {pierwiastek}")
except ValueError as e:
    print(f"Wystąpił błąd: {e}")

